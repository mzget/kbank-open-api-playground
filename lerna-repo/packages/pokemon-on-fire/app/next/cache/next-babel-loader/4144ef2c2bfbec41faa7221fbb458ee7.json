{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nexport default function KPayment(props) {\n  let {\n    attrs,\n    formAction,\n    onFinish,\n    onError,\n    onProcess,\n    debug = false\n  } = props;\n\n  async function formSubmit(event) {\n    event.preventDefault();\n    let formData = new FormData(event.target);\n    let token = formData.get(\"token\");\n    let paymentMethods = formData.get(\"paymentMethods\");\n    let saveCard = formData.get(\"saveCard\");\n    let data = {\n      token,\n      paymentMethods,\n      saveCard\n    };\n    let url = formAction;\n    const resp = await fetch(url, {\n      method: \"POST\",\n      body: _JSON$stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (resp.ok) {\n      const result = await resp.json();\n      if (onFinish) onFinish(result);\n    } else {\n      const result = await resp.json();\n      if (onError) onError(_JSON$stringify(result));\n    }\n\n    if (onProcess) onProcess();\n  }\n\n  React.useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = attrs.scriptUrl;\n    script.setAttribute(\"data-apikey\", attrs.apiKey);\n    script.setAttribute(\"data-amount\", attrs.amount);\n    script.setAttribute(\"data-currency\", attrs.currency);\n    script.setAttribute(\"data-payment-methods\", attrs.paymentMethods);\n    script.setAttribute(\"data-name\", attrs.shopName);\n    script.type = \"text/javascript\";\n    script.async = true;\n\n    script.onload = ev => {\n      if (checkoutForm) {\n        if (debug) {\n          console.log(\"payment-container create new\");\n        }\n\n        window.KPayment.create();\n      }\n    };\n\n    let checkoutForm = document.getElementById(`checkout-form`);\n\n    if (checkoutForm) {\n      checkoutForm.appendChild(script);\n      checkoutForm.addEventListener(\"submit\", formSubmit);\n    }\n\n    return () => {\n      if (checkoutForm) {\n        checkoutForm.removeChild(script);\n        checkoutForm.removeEventListener(\"submit\", formSubmit);\n        let paymentContainer = document.querySelector(\".payment-container\");\n\n        if (paymentContainer) {\n          document.body.removeChild(paymentContainer);\n        }\n      }\n    };\n  }, []);\n  return __jsx(\"form\", {\n    id: `checkout-form`\n  });\n}","map":null,"metadata":{},"sourceType":"module"}