{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/nattapon/Projects/kbtg/monorepo-open-api/packages/kbank-open-api-playground/pokemon-on-fire/app/src/react-kpayment/KPayment.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nexport default function KPayment(props) {\n  let {\n    attrs,\n    formAction,\n    onFinish,\n    onError,\n    onProcess,\n    debug = false\n  } = props;\n\n  async function formSubmit(event) {\n    event.preventDefault();\n    let formData = new FormData(event.target);\n    let token = formData.get(\"token\");\n    let paymentMethods = formData.get(\"paymentMethods\");\n    let saveCard = formData.get(\"saveCard\");\n    let data = {\n      token,\n      paymentMethods,\n      saveCard\n    };\n    let url = formAction;\n    const resp = await fetch(url, {\n      method: \"POST\",\n      body: _JSON$stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    if (resp.ok) {\n      const result = await resp.json();\n      if (onFinish) onFinish(result);\n    } else {\n      const result = await resp.json();\n      if (onError) onError(_JSON$stringify(result));\n    }\n\n    if (onProcess) onProcess();\n  }\n\n  React.useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = attrs.scriptUrl;\n    script.setAttribute(\"data-apikey\", attrs.apiKey);\n    script.setAttribute(\"data-amount\", attrs.amount);\n    script.setAttribute(\"data-currency\", attrs.currency);\n    script.setAttribute(\"data-payment-methods\", attrs.paymentMethods);\n    script.setAttribute(\"data-name\", attrs.shopName);\n    script.type = \"text/javascript\";\n    script.async = true;\n\n    script.onload = ev => {\n      if (checkoutForm) {\n        if (debug) {\n          console.log(\"payment-container create new\");\n        }\n\n        window.KPayment.create();\n      }\n    };\n\n    let checkoutForm = document.getElementById(`checkout-form`);\n\n    if (checkoutForm) {\n      checkoutForm.appendChild(script);\n      checkoutForm.addEventListener(\"submit\", formSubmit);\n    }\n\n    return () => {\n      if (checkoutForm) {\n        checkoutForm.removeChild(script);\n        checkoutForm.removeEventListener(\"submit\", formSubmit);\n        let paymentContainer = document.querySelector(\".payment-container\");\n\n        if (paymentContainer) {\n          document.body.removeChild(paymentContainer);\n        }\n      }\n    };\n  }, []);\n  return __jsx(\"form\", {\n    id: `checkout-form`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/nattapon/Projects/kbtg/monorepo-open-api/packages/kbank-open-api-playground/pokemon-on-fire/app/src/react-kpayment/KPayment.tsx"],"names":["React","KPayment","props","attrs","formAction","onFinish","onError","onProcess","debug","formSubmit","event","preventDefault","formData","FormData","target","token","get","paymentMethods","saveCard","data","url","resp","fetch","method","body","headers","ok","result","json","useEffect","script","document","createElement","src","scriptUrl","setAttribute","apiKey","amount","currency","shopName","type","async","onload","ev","checkoutForm","console","log","window","create","getElementById","appendChild","addEventListener","removeChild","removeEventListener","paymentContainer","querySelector"],"mappings":"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","sourcesContent":["import React from \"react\";\n\ntype KPaymentScriptProps = {\n  scriptUrl: string;\n  apiKey: string;\n  amount: string;\n  currency: string;\n  paymentMethods: \"card\" | \"qr\";\n  shopName: string;\n};\ntype KPaymentProps = {\n  formAction: string;\n  attrs: KPaymentScriptProps;\n  onFinish?(result: string): void;\n  onError?(message: string): void;\n  onProcess?(): void;\n  debug?: boolean;\n};\n\nexport default function KPayment(props: KPaymentProps) {\n  let {\n    attrs,\n    formAction,\n    onFinish,\n    onError,\n    onProcess,\n    debug = false,\n  } = props;\n\n  async function formSubmit(event) {\n    event.preventDefault();\n\n    let formData = new FormData(event.target);\n    let token = formData.get(\"token\");\n    let paymentMethods = formData.get(\"paymentMethods\");\n    let saveCard = formData.get(\"saveCard\");\n\n    let data = {\n      token,\n      paymentMethods,\n      saveCard,\n    };\n    let url = formAction;\n    const resp = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    if (resp.ok) {\n      const result = await resp.json();\n      if (onFinish) onFinish(result);\n    } else {\n      const result = await resp.json();\n      if (onError) onError(JSON.stringify(result));\n    }\n\n    if (onProcess) onProcess();\n  }\n\n  React.useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = attrs.scriptUrl;\n    script.setAttribute(\"data-apikey\", attrs.apiKey);\n    script.setAttribute(\"data-amount\", attrs.amount);\n    script.setAttribute(\"data-currency\", attrs.currency);\n    script.setAttribute(\"data-payment-methods\", attrs.paymentMethods);\n    script.setAttribute(\"data-name\", attrs.shopName);\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.onload = ev => {\n      if (checkoutForm) {\n        if (debug) {\n          console.log(\"payment-container create new\");\n        }\n        (window as any).KPayment.create();\n      }\n    };\n    let checkoutForm = document.getElementById(`checkout-form`);\n    if (checkoutForm) {\n      checkoutForm.appendChild(script);\n      checkoutForm.addEventListener(\"submit\", formSubmit);\n    }\n\n    return () => {\n      if (checkoutForm) {\n        checkoutForm.removeChild(script);\n        checkoutForm.removeEventListener(\"submit\", formSubmit);\n        let paymentContainer = document.querySelector(\".payment-container\");\n        if (paymentContainer) {\n          document.body.removeChild(paymentContainer);\n        }\n      }\n    };\n  }, []);\n\n  return <form id={`checkout-form`}></form>;\n}\n"]},"metadata":{},"sourceType":"module"}