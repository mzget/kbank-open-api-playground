{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/nattapon/Projects/kbtg/monorepo-open-api/packages/kbank-open-api-playground/pokemon-on-fire/app/src/react-kpayment/KPayment.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nexport default function KPayment(props) {\n  var attrs = props.attrs,\n      formAction = props.formAction,\n      onFinish = props.onFinish,\n      onError = props.onError,\n      onProcess = props.onProcess,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug;\n\n  function formSubmit(_x) {\n    return _formSubmit.apply(this, arguments);\n  }\n\n  function _formSubmit() {\n    _formSubmit = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var formData, token, paymentMethods, saveCard, data, url, resp, _result, _result2;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              formData = new FormData(event.target);\n              token = formData.get(\"token\");\n              paymentMethods = formData.get(\"paymentMethods\");\n              saveCard = formData.get(\"saveCard\");\n              data = {\n                token: token,\n                paymentMethods: paymentMethods,\n                saveCard: saveCard\n              };\n              url = formAction;\n              _context.next = 9;\n              return fetch(url, {\n                method: \"POST\",\n                body: _JSON$stringify(data),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 9:\n              resp = _context.sent;\n\n              if (!resp.ok) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 13;\n              return resp.json();\n\n            case 13:\n              _result = _context.sent;\n              if (onFinish) onFinish(_result);\n              _context.next = 21;\n              break;\n\n            case 17:\n              _context.next = 19;\n              return resp.json();\n\n            case 19:\n              _result2 = _context.sent;\n              if (onError) onError(_JSON$stringify(_result2));\n\n            case 21:\n              if (onProcess) onProcess();\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _formSubmit.apply(this, arguments);\n  }\n\n  React.useEffect(function () {\n    var script = document.createElement(\"script\");\n    script.src = attrs.scriptUrl;\n    script.setAttribute(\"data-apikey\", attrs.apiKey);\n    script.setAttribute(\"data-amount\", attrs.amount);\n    script.setAttribute(\"data-currency\", attrs.currency);\n    script.setAttribute(\"data-payment-methods\", attrs.paymentMethods);\n    script.setAttribute(\"data-name\", attrs.shopName);\n    script.type = \"text/javascript\";\n    script.async = true;\n\n    script.onload = function (ev) {\n      if (checkoutForm) {\n        if (debug) {\n          console.log(\"payment-container create new\");\n        }\n\n        window.KPayment.create();\n      }\n    };\n\n    var checkoutForm = document.getElementById(\"checkout-form\");\n\n    if (checkoutForm) {\n      checkoutForm.appendChild(script);\n      checkoutForm.addEventListener(\"submit\", formSubmit);\n    }\n\n    return function () {\n      if (checkoutForm) {\n        checkoutForm.removeChild(script);\n        checkoutForm.removeEventListener(\"submit\", formSubmit);\n        var paymentContainer = document.querySelector(\".payment-container\");\n\n        if (paymentContainer) {\n          document.body.removeChild(paymentContainer);\n        }\n      }\n    };\n  }, []);\n  return __jsx(\"form\", {\n    id: \"checkout-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  });\n}","map":{"version":3,"sources":["/Users/nattapon/Projects/kbtg/monorepo-open-api/packages/kbank-open-api-playground/pokemon-on-fire/app/src/react-kpayment/KPayment.tsx"],"names":["React","KPayment","props","attrs","formAction","onFinish","onError","onProcess","debug","formSubmit","event","preventDefault","formData","FormData","target","token","get","paymentMethods","saveCard","data","url","fetch","method","body","headers","resp","ok","json","result","useEffect","script","document","createElement","src","scriptUrl","setAttribute","apiKey","amount","currency","shopName","type","async","onload","ev","checkoutForm","console","log","window","create","getElementById","appendChild","addEventListener","removeChild","removeEventListener","paymentContainer","querySelector"],"mappings":"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","sourcesContent":["import React from \"react\";\n\ntype KPaymentScriptProps = {\n  scriptUrl: string;\n  apiKey: string;\n  amount: string;\n  currency: string;\n  paymentMethods: \"card\" | \"qr\";\n  shopName: string;\n};\ntype KPaymentProps = {\n  formAction: string;\n  attrs: KPaymentScriptProps;\n  onFinish?(result: string): void;\n  onError?(message: string): void;\n  onProcess?(): void;\n  debug?: boolean;\n};\n\nexport default function KPayment(props: KPaymentProps) {\n  let {\n    attrs,\n    formAction,\n    onFinish,\n    onError,\n    onProcess,\n    debug = false,\n  } = props;\n\n  async function formSubmit(event) {\n    event.preventDefault();\n\n    let formData = new FormData(event.target);\n    let token = formData.get(\"token\");\n    let paymentMethods = formData.get(\"paymentMethods\");\n    let saveCard = formData.get(\"saveCard\");\n\n    let data = {\n      token,\n      paymentMethods,\n      saveCard,\n    };\n    let url = formAction;\n    const resp = await fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    if (resp.ok) {\n      const result = await resp.json();\n      if (onFinish) onFinish(result);\n    } else {\n      const result = await resp.json();\n      if (onError) onError(JSON.stringify(result));\n    }\n\n    if (onProcess) onProcess();\n  }\n\n  React.useEffect(() => {\n    const script = document.createElement(\"script\");\n    script.src = attrs.scriptUrl;\n    script.setAttribute(\"data-apikey\", attrs.apiKey);\n    script.setAttribute(\"data-amount\", attrs.amount);\n    script.setAttribute(\"data-currency\", attrs.currency);\n    script.setAttribute(\"data-payment-methods\", attrs.paymentMethods);\n    script.setAttribute(\"data-name\", attrs.shopName);\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.onload = ev => {\n      if (checkoutForm) {\n        if (debug) {\n          console.log(\"payment-container create new\");\n        }\n        (window as any).KPayment.create();\n      }\n    };\n    let checkoutForm = document.getElementById(`checkout-form`);\n    if (checkoutForm) {\n      checkoutForm.appendChild(script);\n      checkoutForm.addEventListener(\"submit\", formSubmit);\n    }\n\n    return () => {\n      if (checkoutForm) {\n        checkoutForm.removeChild(script);\n        checkoutForm.removeEventListener(\"submit\", formSubmit);\n        let paymentContainer = document.querySelector(\".payment-container\");\n        if (paymentContainer) {\n          document.body.removeChild(paymentContainer);\n        }\n      }\n    };\n  }, []);\n\n  return <form id={`checkout-form`}></form>;\n}\n"]},"metadata":{},"sourceType":"module"}